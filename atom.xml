<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[David Winter]]></title>
  <link href="http://dwinter.github.com/atom.xml" rel="self"/>
  <link href="http://dwinter.github.com/"/>
  <updated>2012-08-18T20:55:15+12:00</updated>
  <id>http://dwinter.github.com/</id>
  <author>
    <name><![CDATA[David Winter]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rentrez - an R package for interfacing with the NCBI's databases]]></title>
    <link href="http://dwinter.github.com/blog/2012/08/14/rentrez-an-r-package-for-interfacing-with-the-ncbis-databases/"/>
    <updated>2012-08-14T18:59:00+12:00</updated>
    <id>http://dwinter.github.com/blog/2012/08/14/rentrez-an-r-package-for-interfacing-with-the-ncbis-databases</id>
    <content type="html"><![CDATA[<p>Biologists make a lot of data these days. In fact, we seem to make more data
than we can really deal with. Databases like <a href="http://www.pubmed.org">Pubmed</a>,
<a href="http://www.fishbase.org">Fishbase</a>, <a href="http://www.gbif.org">GBIF</a> and the <a href="http://www.ncbi.nlm.nih.gov/sites/gquery">rest of the NCBI&#8217;s
offerings</a> are full of answers to
questions that no one has got around to asking.</p>

<p><a href="http://ropensci.org/">ROpenSci</a> is a collection of libraries for the R progamming
language that is designed to help biologists pull data from all over the web
into their R sessions and speed the process of turning data into information. The
<code>ROpenSci</code> team have already made a great set of tools, which allow researchers to
work with <a href="http://ropensci.org/packages/index.html">a bunch of databases</a>, and,
just as importantly share their results as nice reproducable R code. Up until
recently R has not really had a library for taking data from the NCBI&#8217;s various
databses (including such massive sources of data as Genbank and Pubmed). I&#8217;m very
happy to say that my library for doing just this,
 <a href="https://github.com/ropensci/rentrez"><code>rentrez</code></a> is now part of the <code>ROpenSci</code> family.</p>

<h2>What rentrez does</h2>

<p>At present the functions provided by <code>rentrez</code> cover the entire
<a href="http://www.ncbi.nlm.nih.gov/books/NBK25501/">Eutils API</a>. Basically, the functions
take arguments provided by a user, produce the URL needed to query the NCBI&#8217;s API
and fetches the resulting data. In most cases the functions return lists that
contain the parts of the resulting file that are most likely to be useful as
items. When the returned file is XML the list contains the XML file for those
that want to dig deeper.</p>

<h2>What you can do</h2>

<p>Grab a fork! The idea of ROpenSci is to create a set of tools that are useful to
as many scientists as possble. That means open data and open code.
If you find a bug in what I&#8217;ve done I want to know about it, if you think it can
be usefully extended feel free to pick it up and run. I&#8217;m also keen to here of
use-cases other than the ones already outlined in the documentation.</p>

<h2>An example usage</h2>

<p>There are some short examples in the README file for the <code>rentrez</code> repository,
but I thought I&#8217;d run through a longer one here. This is also reproducable blogging,
the markdown underlying this post was processed with <code>knitr</code> from <a href="https://gist.github.com/820f1fe0ed42ec7b6a15">this source</a></p>

<p>Lately, I&#8217;ve been working on a little meta-analysis of phylogenies. In particualr,
we&#8217;re interested in why sometimes different genes tell different stories about
the relationships between species from which the come. In terms of being able
to get the individual gene trees I need to do these analyses there are good,
rather less good and quite bad papers out there. In the best cases I can just
download the trees as nice, parsable newick files from<a href="treebase.org">TreeBase</a>
(which has already been <a href="github.com/ROpenSci/treebase">wrapped by ROpenSci</a>).
Sometimes I need to print out the trees from a paper and work with pencil and paper,
which I can handle. In a few cases people haven&#8217;t actually published their individual
gene trees, if I want to included these papers I need to replicate their work by
downloading the gene sequences, aligning them and making new trees.</p>

<p>So, here&#8217;s an example of how I&#8217;ve been using <code>rentrez</code> to automate some of that
process. I&#8217;m going to use a slightly convaluted process to get all the data, but
that&#8217;s just so I can walk though a bunch of the <code>rentrez</code> functions. Let&#8217;s get
started. Reece et al (2010, <a href="http://dx.doi.org/10.1016/j.ympev.2010.07.013">doi:10.1016/j.ympev.2010.07.013</a>)
presented a phylogeny of moray eels using four different genes, but didn&#8217;t
publish the gene trees. I want to get the sequences underlying their analyses,
which will be in the NCBI&#8217;s databases, so I can reproduce their results. To get
data associated with this paper from the NCBI I need the PMID (pubmed ID), which
I can find using the <code>rentrez</code> function <code>entrez_search</code> to query the pubmed
database with the paper&#8217;s doi:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>rentrez<span class="p">)</span>
</span><span class='line'>pubmed_search <span class="o">&lt;-</span> entrez_search<span class="p">(</span>db <span class="o">=</span> <span class="s">&quot;pubmed&quot;</span><span class="p">,</span> term <span class="o">=</span> <span class="s">&quot;10.1016/j.ympev.2010.07.013[doi]&quot;</span><span class="p">)</span>
</span><span class='line'>pubmed_search<span class="p">$</span>ids
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 20674752</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the functions in <code>rentrez</code> create a URL to get data from the NCBI, then fetch
the resulting document, usually as an XML file. In most cases the functions will
parse the most relevant sections of the XML file out and present them to you
as items in a list (<code>ids</code> being one item of the <code>pubmed_search</code> list in this case).</p>

<p>OK, now we have the PMID, what data does NCBI have for this paper? The
<code>entrez_link</code> function lets us find out. In this case the <code>db</code> argument can be
used to limit the number of data sources to check, but I want to see every data
source here so I&#8217;ll set this paramater to &#8220;all&#8221;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>NCBI_data <span class="o">&lt;-</span> entrez_link<span class="p">(</span>dbfrom <span class="o">=</span> <span class="s">&quot;pubmed&quot;</span><span class="p">,</span> id <span class="o">=</span> pubmed_search<span class="p">$</span>ids<span class="p">,</span> db <span class="o">=</span> <span class="s">&quot;all&quot;</span><span class="p">)</span>
</span><span class='line'>str<span class="p">(</span>NCBI_data<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## List of 10</span>
</span><span class='line'><span class="c1">##  $ pubmed_nuccore            : chr [1:119] &quot;307082467&quot; &quot;307082465&quot; &quot;307082463&quot; &quot;307082461&quot; ...</span>
</span><span class='line'><span class="c1">##  $ pubmed_popset             : chr [1:4] &quot;307082412&quot; &quot;307075396&quot; &quot;307075338&quot; &quot;307075274&quot;</span>
</span><span class='line'><span class="c1">##  $ pubmed_protein            : chr [1:118] &quot;307082468&quot; &quot;307082466&quot; &quot;307082464&quot; &quot;307082462&quot; ...</span>
</span><span class='line'><span class="c1">##  $ pubmed_pubmed             : chr [1:126] &quot;20674752&quot; &quot;20375076&quot; &quot;19053846&quot; &quot;11430656&quot; ...</span>
</span><span class='line'><span class="c1">##  $ pubmed_pubmed_combined    : chr [1:6] &quot;20674752&quot; &quot;20375076&quot; &quot;19053846&quot; &quot;11430656&quot; ...</span>
</span><span class='line'><span class="c1">##  $ pubmed_pubmed_five        : chr [1:6] &quot;20674752&quot; &quot;20375076&quot; &quot;19053846&quot; &quot;11430656&quot; ...</span>
</span><span class='line'><span class="c1">##  $ pubmed_pubmed_reviews     : chr &quot;20674752&quot;</span>
</span><span class='line'><span class="c1">##  $ pubmed_pubmed_reviews_five: chr &quot;20674752&quot;</span>
</span><span class='line'><span class="c1">##  $ pubmed_taxonomy_entrez    : chr [1:40] &quot;876649&quot; &quot;876647&quot; &quot;876643&quot; &quot;876642&quot; ...</span>
</span><span class='line'><span class="c1">##  $ file                      :Classes &#39;XMLInternalDocument&#39;, &#39;XMLAbstractDocument&#39;, &#39;oldClass&#39; &lt;externalptr&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>The most relevant data here is the from the <a href="ncbi.nlm.nih.gov/popset">popset</a>
database, which containts population and phylogenetic datasets. If I want to
see what each of the four popset datasets associated with this paper are about I
can use <code>entrez_summary</code> to have a look. This function can collect summaries
from a lot of different databases, and, because the XML return by those databases
isn&#8217;t conisitant doesn&#8217;t make any attempt to parse information from the resulting
file. Instead you get a <code>XMLInternalDocument</code> object from the <code>XML</code> library, which
you have to further process yourself. In this case, a little xpath gets the name
of each dataset:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>data_summaries <span class="o">&lt;-</span> entrez_summary<span class="p">(</span>db <span class="o">=</span> <span class="s">&quot;popset&quot;</span><span class="p">,</span> ids <span class="o">=</span> NCBI_data<span class="p">$</span>pubmed_popset<span class="p">)</span>
</span><span class='line'>xpathSApply<span class="p">(</span>data_summaries<span class="p">,</span> <span class="s">&quot;//Item[@Name=&#39;Title&#39;]&quot;</span><span class="p">,</span> xmlValue<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;Muraenidae cytochrome oxidase subunit 1 gene, partial cds; mitochondrial.&quot;</span>
</span><span class='line'><span class="c1">## [2] &quot;Muraenidae recombination activating protein 2 gene, partial cds.&quot;         </span>
</span><span class='line'><span class="c1">## [3] &quot;Muraenidae recombination activating protein 1 gene, partial cds.&quot;         </span>
</span><span class='line'><span class="c1">## [4] &quot;Muraenidae cytochrome b gene, partial cds; mitochondrial.&quot;                </span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, since we might expect nuclear and mitochondrial genes to hav different
histories, let&#8217;s get sequences from each genome (the the COI and RAG1 datasets)
using <code>entrez_fetch</code>. By specifying <code>file_format="fasta"</code> we will get characater
vectors in the fasta format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>coi <span class="o">&lt;-</span> entrez_fetch<span class="p">(</span>db <span class="o">=</span> <span class="s">&quot;popset&quot;</span><span class="p">,</span> ids <span class="o">=</span> NCBI_data<span class="p">$</span>pubmed_popset<span class="p">[</span><span class="m">1</span><span class="p">],</span> file_format <span class="o">=</span> <span class="s">&quot;fasta&quot;</span><span class="p">)</span>
</span><span class='line'>rag1 <span class="o">&lt;-</span> entrez_fetch<span class="p">(</span>db <span class="o">=</span> <span class="s">&quot;popset&quot;</span><span class="p">,</span> ids <span class="o">=</span> NCBI_data<span class="p">$</span>pubmed_popset<span class="p">[</span><span class="m">3</span><span class="p">],</span> file_format <span class="o">=</span> <span class="s">&quot;fasta&quot;</span><span class="p">)</span>
</span><span class='line'>write<span class="p">(</span>coi<span class="p">,</span> <span class="s">&quot;moray_coi_raw.fasta&quot;</span><span class="p">)</span>
</span><span class='line'>write<span class="p">(</span>rag1<span class="p">,</span> <span class="s">&quot;moray_rag1_raw.fasta&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>So I&#8217;ve got the data on hand - that&#8217;s all the I need <code>rentrez</code> for, but I might
as well align these  sequences and make gene trees for each. I&#8217;ll just do a
quick and diry neighbor-joining tree using <code>ape</code> and we can clean up the long
OTU names with the help of <code>stingr</code>. (I put the fussy work of cleaning the names
 and rooting the trees into a function <code>clean_and_root</code>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>ape<span class="p">)</span>
</span><span class='line'>library<span class="p">(</span>stringr<span class="p">)</span>
</span><span class='line'>clean_and_root <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>tr<span class="p">,</span> outgroup<span class="p">,</span> resolved <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    tr<span class="p">$</span>tip.label <span class="o">&lt;-</span> sapply<span class="p">(</span>str_split<span class="p">(</span>tr<span class="p">$</span>tip.label<span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">),</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> paste<span class="p">(</span>x<span class="p">[</span><span class="m">2</span>:<span class="m">3</span><span class="p">],</span>
</span><span class='line'>        collapse <span class="o">=</span> <span class="s">&quot;_&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="kr">return</span><span class="p">(</span>root<span class="p">(</span>tr<span class="p">,</span> outgroup<span class="p">,</span> resolve.root <span class="o">=</span> resolved<span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>par<span class="p">(</span>mfrow <span class="o">=</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">))</span>
</span><span class='line'>coi_ali <span class="o">&lt;-</span> muscle<span class="p">(</span>read.dna<span class="p">(</span><span class="s">&quot;moray_coi_raw.fasta&quot;</span><span class="p">,</span> <span class="s">&quot;fasta&quot;</span><span class="p">))</span>
</span><span class='line'>coi_tr <span class="o">&lt;-</span> nj<span class="p">(</span>dist.dna<span class="p">(</span>coi_ali<span class="p">,</span> <span class="s">&quot;k81&quot;</span><span class="p">))</span>
</span><span class='line'>clean_coi_tr <span class="o">&lt;-</span> clean_and_root<span class="p">(</span>coi_tr<span class="p">,</span> <span class="s">&quot;Uropterygius_macrocephalus&quot;</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>clean_coi_tr<span class="p">,</span> direction <span class="o">=</span> <span class="s">&quot;rightwards&quot;</span><span class="p">,</span> cex <span class="o">=</span> <span class="m">0.5</span><span class="p">)</span>
</span><span class='line'>rag_ali <span class="o">&lt;-</span> muscle<span class="p">(</span>read.dna<span class="p">(</span><span class="s">&quot;moray_rag1_raw.fasta&quot;</span><span class="p">,</span> <span class="s">&quot;fasta&quot;</span><span class="p">))</span>
</span><span class='line'>rag_tr <span class="o">&lt;-</span> nj<span class="p">(</span>dist.dna<span class="p">(</span>rag_ali<span class="p">,</span> <span class="s">&quot;k81&quot;</span><span class="p">))</span>
</span><span class='line'>clean_rag_tr <span class="o">&lt;-</span> clean_and_root<span class="p">(</span>rag_tr<span class="p">,</span> <span class="s">&quot;Uropterygius_macrocephalus&quot;</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>clean_rag_tr<span class="p">,</span> direction <span class="o">=</span> <span class="s">&quot;leftward&quot;</span><span class="p">,</span> cex <span class="o">=</span> <span class="m">0.5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i.imgur.com/QcghP.png" alt="plot of chunk trees" /></p>
]]></content>
  </entry>
  
</feed>
